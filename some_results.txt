some results.

the initial conditions were:
sourceData1 = [1.2, -3.0, 0, -2, 4.1] -- , 0, 0, 0, 0, 0]
sourceData2 = [1.2, -3.0, 2, 2, 1.1] ++ repeat 0

the more-or-less-fitting answer:
[-0.5677278105225112,0.29836834737212126,-0.4863939049524879,0.8419966980646085,0.8656649745958478]
-- the 8th generations, without mutations at all, only crossing
   and saving parents :))


g2:
*Main> head $ (initGenomes 50 >>= passGens 100  ) `evalRand` mkStdGen 97
[-0.1172683669580743,0.17984600380675242,-0.1639483932177468,0.3167275340125218,0.32306117664567635]
fitness = 3.017018032243529e-2 ~= 0.03 = 3%

*Main> top5 $ (initGenomes 100 >>= passGens 1000  ) `evalRand` mkStdGen 99
[9.610623131087181e-4,9.610623131087181e-4,9.610623131087181e-4,9.610623131087181e-4,9.610623131087181e-4]
*Main> head $ (initGenomes 100 >>= passGens 1000  ) `evalRand` mkStdGen 99
[-0.3244163916251096,0.32050958224553916,0.36797938023508636,9.984409896805134e-2,0.37820367984931424]
fitness is 0.1%


*Main> let w = (initGenomes 100 >>= passGens 1000  ) `evalRand` mkStdGen 105
*Main> top5 w
[2.015244521228282e-3,2.015244521228282e-3,2.015244521228282e-3,2.015244521228282e-3,2.015244521228282e-3]
*Main> head w
[-0.16975860352087796,-0.35645658046662,-0.6695554445075053,0.2789299038191158,-7.513550608659186e-2]
fitness is 0.2%